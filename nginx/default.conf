error_log /dev/stdout info;


limit_req_zone $http_x_forwarded_for zone=ratelimit:50m rate=5r/s;
limit_req_status 429;
limit_conn_status 429;

log_format upstream_time '[$time_local] reqId:$http_x_request_id src:$http_x_forwarded_for dest:$upstream_addr'
' "$request" $status size:$body_bytes_sent'
' ref:"$http_referer" ua:"$http_user_agent"'
' req_time: $request_time uct:$upstream_connect_time urt:$upstream_response_time';

resolver 11.0.0.2;

server {
  access_log /dev/stdout upstream_time;
  listen 8084;
  location / {
    if ($http_origin = '') {
      set $http_origin "*";
    }

    proxy_hide_header Access-Control-Allow-Origin;

    add_header 'Access-Control-Allow-Origin' $http_origin always;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers;

    # There could be several add_header directives. These directives are inherited from the previous level if and only if there are no add_header directives defined on the current level.
    if ($request_method = 'OPTIONS') { 
      add_header 'Access-Control-Allow-Origin' $http_origin always;
      add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers;
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'PUT,GET,POST,DELETE,OPTIONS';
      add_header 'Vary' 'Origin, Access-Control-Request-Headers';
      add_header 'Content-Type' 'text/plain;charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    limit_req zone=ratelimit burst=20 nodelay;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://backend:9883/;
  }
}
